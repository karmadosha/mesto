(()=>{"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(t,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,n){if("object"!==e(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var n=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var n,r;return n=e,(r=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((function(t){return e._checkResponse(t)}))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((function(t){return e._checkResponse(t)}))}},{key:"editProfile",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then((function(e){return t._checkResponse(e)}))}},{key:"addNewCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return t._checkResponse(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._checkResponse(e)}))}},{key:"editAvatar",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((function(e){return t._checkResponse(e)}))}},{key:"changeLikeStatus",value:function(e,t){var n=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:t?"PUT":"DELETE",headers:this._headers}).then((function(e){return n._checkResponse(e)}))}}])&&t(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}();function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,t){if("object"!==r(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}var i=function(){function e(t,n){var r=t.data,o=t.userId,i=t.handleCardClick,u=t.handleDeleteCard,a=t.handleLikeClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=r,this._link=r.link,this._name=r.name,this._userId=o,this._handleCardClick=i,this._handleDeleteCard=u,this._handleLikeClick=a,this._templateSelector=n,this.isLiked=!1}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return this._cardElement=document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0),this._cardElement}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardPicture=this._element.querySelector(".element__picture"),this._cardPicture.src=this._link,this._cardPicture.alt=this._name,this._element.querySelector(".element__title").textContent=this._name,this._likeButton=this._element.querySelector(".element__like"),this._deleteButton=this._element.querySelector(".element__remove"),this._likeCounter=this._element.querySelector(".element__like-count"),this._likeCounter.textContent=this._data.likes.length,this._ownerId=this._data.owner._id,this._ownerId!==this._userId&&(this._deleteButton.style.display="none"),this._setEventListeners(),this._element}},{key:"getLikeStatus",value:function(){if(this._likeButton.classList.contains("element__like_active"))return this.isLiked=!0}},{key:"setLikes",value:function(e){return this._likeButton.classList.toggle("element__like_active"),this._likeCounter.textContent=e.likes.length,this.isLiked=!this.isLiked}},{key:"checkLikeStatus",value:function(){var e=this;this._data.likes.map((function(e){return e._id})).some((function(t){return t===e._userId}))&&this._likeButton.classList.add("element__like_active")}},{key:"deleteCard",value:function(){this._element.remove(),this._element=null}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){e._handleLikeClick()})),this._cardPicture.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)})),this._deleteButton.addEventListener("click",(function(){e._handleDeleteCard(e)}))}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==u(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==u(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===u(o)?o:String(o)),r)}var o}var c=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"appendItem",value:function(e){this._container.append(e)}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&a(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==l(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==l(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===l(o)?o:String(o)),r)}var o}var f=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscapeClose=this._handleEscapeClose.bind(this),this._submitBtn=this._popup.querySelector(".form__save-btn")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscapeClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscapeClose)}},{key:"_handleEscapeClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"renderLoading",value:function(e,t){this._submitBtn.textContent=e?"Сохранение...":t}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){(t.target.classList.contains("popup_opened")||t.target.classList.contains("popup__close-btn"))&&e.close()}))}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==p(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==p(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===p(o)?o:String(o)),r)}var o}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},h.apply(this,arguments)}function m(e,t){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},m(e,t)}function d(e){return d=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},d(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===p(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,n))._handleFormSubmit=r,t._form=t._popup.querySelector(".form"),t._inputs=t._form.querySelectorAll(".form__item"),t}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputValues={},this._inputs.forEach((function(t){e._inputValues[t.name]=t.value})),this._inputValues}},{key:"setInputValues",value:function(e){this._inputs.forEach((function(t){t.value=e[t.name]}))}},{key:"setEventListeners",value:function(){var e=this;h(d(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e.renderLoading(!0),e._handleFormSubmit(e._getInputValues())}))}},{key:"close",value:function(){h(d(u.prototype),"close",this).call(this),this._form.reset()}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(f);function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==b(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==b(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===b(o)?o:String(o)),r)}var o}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},S.apply(this,arguments)}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(r);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._popupImage=t._popup.querySelector(".popup__image"),t._popupImageTitle=t._popup.querySelector(".popup__image-title"),t}return t=u,(n=[{key:"open",value:function(e,t){this._popupImage.src=t,this._popupImage.alt=e,this._popupImageTitle.textContent=e,S(k(u.prototype),"open",this).call(this)}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(f);function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==E(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==E(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===E(o)?o:String(o)),r)}var o}function O(){return O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},O.apply(this,arguments)}function C(e,t){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},C(e,t)}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&C(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._handleSubmitCallback=t,n._form=n._popup.querySelector(".form"),n}return t=u,(n=[{key:"setSubmitAction",value:function(e){this._handleSubmitCallback=e}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmitCallback()})),O(P(u.prototype),"setEventListeners",this).call(this)}}])&&j(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(f);function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==I(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==I(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===I(o)?o:String(o)),r)}var o}var R=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(t),this._about=document.querySelector(n),this._avatar=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._about.textContent=e.about,this._userId=e._id}},{key:"setAvatar",value:function(e){this._avatar.src=e.avatar}},{key:"getUserId",value:function(){return this._userId}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),T={formSelector:".form",inputSelector:".form__item",submitButtonSelector:".form__save-btn",inactiveButtonClass:"form__save-btn_disabled",inputErrorClass:"form__item_type_error",errorClass:"form__error_active"},B=document.querySelector(".popup_type_profile"),A=(document.querySelector(".profile__name"),document.querySelector(".profile__about"),document.querySelector(".profile__avatar"),B.querySelector(".form_type_profile")),U=(A.querySelector(".form__item_user_name"),A.querySelector(".form__item_user_about"),document.querySelector(".profile__edit-btn")),x=document.querySelector(".form_type_avatar"),V=document.querySelector(".profile__edit-avatar-btn"),D=document.querySelector(".popup_type_new-card"),F=document.querySelector(".profile__add-btn"),N=D.querySelector(".form_type_card"),J=(N.querySelector(".form__item_card_name"),N.querySelector(".form__item_card_about"),document.querySelector(".element-template"),document.querySelector(".popup_type_big-picture"));function H(e){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},H(e)}function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==H(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==H(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===H(o)?o:String(o)),r)}var o}J.querySelector(".popup__image-title"),J.querySelector(".popup__image"),document.querySelector(".popup_type_card-delete"),document.querySelector(".elements"),document.querySelectorAll(".popup");var z=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._formElement=n,this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"_disableSubmitButton",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)}},{key:"_enableSubmitButton",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled")}},{key:"_toggleSubmitBtnState",value:function(){this._hasInvalidInput()?this._disableSubmitButton():this._enableSubmitButton()}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_showInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}},{key:"_setEventListeners",value:function(){var e=this;this._toggleSubmitBtnState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleSubmitBtnState()}))}))}},{key:"resetValidation",value:function(){var e=this;this._disableSubmitButton(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&M(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function $(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var G=new z(T,A),K=new z(T,N),Q=new z(T,x),W=new w(".popup_type_big-picture"),X=new R(".profile__name",".profile__about",".profile__avatar"),Y=new L(".popup_type_card-delete"),Z=new n({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-63",headers:{"Content-type":"application/json",Authorization:"0fa20944-2374-4f9d-8a10-46389229647c"}});Promise.all([Z.getUserInfo(),Z.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,u,a=[],c=!0,l=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=i.call(n)).done)&&(a.push(r.value),a.length!==t);c=!0);}catch(e){l=!0,o=e}finally{try{if(!c&&null!=n.return&&(u=n.return(),Object(u)!==u))return}finally{if(l)throw o}}return a}}(t,n)||function(e,t){if(e){if("string"==typeof e)return $(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?$(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];o._id,X.setUserInfo(o),te.renderItems(i),X.setAvatar(o)})).catch((function(e){return console.log(e)}));var ee=function(e){var t=new i({data:e,userId:X.getUserId(),handleCardClick:function(e,t){W.open(e,t)},handleDeleteCard:function(t){Y.open(),Y.setSubmitAction((function(){Z.deleteCard(e._id).then((function(){t.deleteCard(),Y.close()})).catch((function(e){return console.log(e)}))}))},handleLikeClick:function(){Z.changeLikeStatus(e._id,!t.getLikeStatus()).then((function(e){t.isLiked=t.setLikes(e)})).catch((function(e){return console.log(e)}))}},".element-template"),n=t.generateCard();return t.checkLikeStatus(),n},te=new c({renderer:function(e){te.appendItem(ee(e))}},".elements"),ne=new _({popupSelector:".popup_type_profile",handleFormSubmit:function(e){Z.editProfile(e).then((function(e){X.setUserInfo(e),ne.close()})).catch((function(e){return console.log(e)})).finally((function(){return ne.renderLoading(!1,"Сохранить")}))}}),re=new _({popupSelector:".popup_type_new-card",handleFormSubmit:function(e){Z.addNewCard(e).then((function(e){te.addItem(ee(e)),re.close()})).catch((function(e){return console.log(e)})).finally((function(){return re.renderLoading(!1,"Создать")}))}}),oe=new _({popupSelector:".popup_type_avatar-edit",handleFormSubmit:function(e){Z.editAvatar(e.link).then((function(e){X.setAvatar({avatar:e.avatar}),oe.close()})).catch((function(e){return console.log(e)})).finally((function(){return oe.renderLoading(!1,"Сохранить")}))}});F.addEventListener("click",(function(){K.resetValidation(),re.open()})),U.addEventListener("click",(function(){G.resetValidation(),ne.open(),ne.setInputValues(X.getUserInfo())})),V.addEventListener("click",(function(){Q.resetValidation(),oe.open()})),W.setEventListeners(),ne.setEventListeners(),oe.setEventListeners(),re.setEventListeners(),Y.setEventListeners(),G.enableValidation(),K.enableValidation(),Q.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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VSxHQUFpQlMsZUFBZXhDLEVBQVNLLGNBQzNDLElBUUExQyxFQUFjbkUsaUJBQWlCLFNBQVMsV0FDdENzRyxFQUFxQnlDLGtCQUNyQkYsR0FBZ0JoQixNQUNsQixJQUVBdEIsRUFBZTBDLG9CQUNmVixHQUFpQlUsb0JBQ2pCSixHQUFnQkksb0JBQ2hCUCxHQUFnQk8sb0JBQ2hCeEMsRUFBdUJ3QyxvQkFFdkI3QyxFQUFzQjhDLG1CQUN0QjdDLEVBQXNCNkMsbUJBQ3RCNUMsRUFBcUI0QyxrQiIsInNvdXJjZXMiOlsid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvcGFnZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3Rvcih7IGJhc2VVcmwsIGhlYWRlcnMgfSkge1xyXG4gICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XHJcbiAgICB0aGlzLl9oZWFkZXJzID0gaGVhZGVycztcclxuICB9XHJcblxyXG4gIF9jaGVja1Jlc3BvbnNlKHJlcykge1xyXG4gICAgaWYocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LA6ICR7cmVzLnN0YXR1c31gKTtcclxuICB9XHJcblxyXG4gIGdldEluaXRpYWxDYXJkcygpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pXHJcbiAgICAudGhlbihyZXMgPT4gdGhpcy5fY2hlY2tSZXNwb25zZShyZXMpKTtcclxuICB9XHJcblxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgfSlcclxuICAgIC50aGVuKHJlcyA9PiB0aGlzLl9jaGVja1Jlc3BvbnNlKHJlcykpO1xyXG4gIH1cclxuXHJcbiAgZWRpdFByb2ZpbGUoZGF0YSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICBtZXRob2Q6ICdQQVRDSCcsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXHJcbiAgICAgICAgYWJvdXQ6IGRhdGEuYWJvdXRcclxuICAgICAgfSlcclxuICAgIH0pXHJcbiAgICAudGhlbihyZXMgPT4gdGhpcy5fY2hlY2tSZXNwb25zZShyZXMpKTtcclxuICB9XHJcbiAgXHJcbiAgYWRkTmV3Q2FyZChpbnB1dERhdGEpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiBpbnB1dERhdGEubmFtZSxcclxuICAgICAgICBsaW5rOiBpbnB1dERhdGEubGlua1xyXG4gICAgICB9KVxyXG4gICAgfSlcclxuICAgIC50aGVuKHJlcyA9PiB0aGlzLl9jaGVja1Jlc3BvbnNlKHJlcykpO1xyXG4gIH1cclxuXHJcbiAgZGVsZXRlQ2FyZChfaWQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke19pZH1gLCB7XHJcbiAgICAgIG1ldGhvZDogJ0RFTEVURScsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KVxyXG4gICAgLnRoZW4ocmVzID0+IHRoaXMuX2NoZWNrUmVzcG9uc2UocmVzKSk7XHJcbiAgfVxyXG5cclxuICBlZGl0QXZhdGFyKGxpbmspIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BBVENIJywgXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgYXZhdGFyOiBsaW5rIH0pXHJcbiAgICB9KVxyXG4gICAgLnRoZW4ocmVzID0+IHRoaXMuX2NoZWNrUmVzcG9uc2UocmVzKSk7XHJcbiAgfVxyXG5cclxuICBjaGFuZ2VMaWtlU3RhdHVzKF9pZCwgaXNMaWtlZCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7X2lkfS9saWtlc2AsIHtcclxuICAgICAgbWV0aG9kOiBpc0xpa2VkID8gJ1BVVCcgOiAnREVMRVRFJyxcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc1xyXG4gICAgfSlcclxuICAgIC50aGVuKHJlcyA9PiB0aGlzLl9jaGVja1Jlc3BvbnNlKHJlcykpXHJcbiAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoeyBkYXRhLCB1c2VySWQsIGhhbmRsZUNhcmRDbGljaywgaGFuZGxlRGVsZXRlQ2FyZCwgaGFuZGxlTGlrZUNsaWNrIH0sIHRlbXBsYXRlU2VsZWN0b3IsICkge1xyXG4gICAgdGhpcy5fZGF0YSA9IGRhdGE7XHJcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rOyAgXHJcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xyXG4gICAgdGhpcy5fdXNlcklkID0gdXNlcklkOyAgXHJcbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XHJcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVDYXJkID0gaGFuZGxlRGVsZXRlQ2FyZDtcclxuICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayA9IGhhbmRsZUxpa2VDbGljaztcclxuICAgIHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IgPSB0ZW1wbGF0ZVNlbGVjdG9yO1xyXG4gICAgdGhpcy5pc0xpa2VkID0gZmFsc2U7XHJcbn07XHJcblxyXG4gIF9nZXRUZW1wbGF0ZSgpIHtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50ID0gZG9jdW1lbnRcclxuICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IpXHJcbiAgICAuY29udGVudFxyXG4gICAgLnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50JylcclxuICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgICBcclxuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcclxuICB9XHJcblxyXG4gIGdlbmVyYXRlQ2FyZCgpIHtcclxuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xyXG4gICAgdGhpcy5fY2FyZFBpY3R1cmUgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19waWN0dXJlJyk7XHJcbiAgICB0aGlzLl9jYXJkUGljdHVyZS5zcmMgPSB0aGlzLl9saW5rOyAgICBcclxuICAgIHRoaXMuX2NhcmRQaWN0dXJlLmFsdCA9IHRoaXMuX25hbWU7XHJcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X190aXRsZScpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcclxuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19saWtlJyk7XHJcbiAgICB0aGlzLl9kZWxldGVCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19yZW1vdmUnKTtcclxuICAgIHRoaXMuX2xpa2VDb3VudGVyID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZS1jb3VudCcpO1xyXG4gICAgdGhpcy5fbGlrZUNvdW50ZXIudGV4dENvbnRlbnQgPSB0aGlzLl9kYXRhLmxpa2VzLmxlbmd0aDtcclxuICAgIHRoaXMuX293bmVySWQgPSB0aGlzLl9kYXRhLm93bmVyLl9pZDtcclxuICAgIGlmICh0aGlzLl9vd25lcklkICE9PSB0aGlzLl91c2VySWQpIHtcclxuICAgICAgdGhpcy5fZGVsZXRlQnV0dG9uLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICB9XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgXHJcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcclxuICB9XHJcblxyXG4gIGdldExpa2VTdGF0dXMoKSB7XHJcbiAgICBpZiAodGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QuY29udGFpbnMoJ2VsZW1lbnRfX2xpa2VfYWN0aXZlJykpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuaXNMaWtlZCA9IHRydWU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzZXRMaWtlcyhkYXRhKSB7XHJcbiAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC50b2dnbGUoJ2VsZW1lbnRfX2xpa2VfYWN0aXZlJyk7XHJcbiAgICB0aGlzLl9saWtlQ291bnRlci50ZXh0Q29udGVudCA9IGRhdGEubGlrZXMubGVuZ3RoO1xyXG4gICAgcmV0dXJuIHRoaXMuaXNMaWtlZCA9ICF0aGlzLmlzTGlrZWQ7XHJcbiAgfVxyXG5cclxuICBjaGVja0xpa2VTdGF0dXMoKSB7XHJcbiAgICBpZiAodGhpcy5fZGF0YS5saWtlcy5tYXAobGlrZSA9PiBsaWtlLl9pZCkuc29tZShpZCA9PiBpZCA9PT0gdGhpcy5fdXNlcklkKSkge1xyXG4gICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2VsZW1lbnRfX2xpa2VfYWN0aXZlJyk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBkZWxldGVDYXJkKCkge1xyXG4gICAgdGhpcy5fZWxlbWVudC5yZW1vdmUoKTtcclxuICAgIHRoaXMuX2VsZW1lbnQgPSBudWxsO1xyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fbGlrZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlTGlrZUNsaWNrKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9jYXJkUGljdHVyZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKHRoaXMuX25hbWUsIHRoaXMuX2xpbmspO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVEZWxldGVDYXJkKHRoaXMpO1xyXG4gICAgfSk7XHJcbiAgfSAgXHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3RvciAoeyByZW5kZXJlcn0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXJTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICByZW5kZXJJdGVtcyhpdGVtcykge1xyXG4gICAgaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIGFwcGVuZEl0ZW0oaXRlbSkge1xyXG4gICAgdGhpcy5fY29udGFpbmVyLmFwcGVuZChpdGVtKTtcclxuICB9XHJcblxyXG4gIGFkZEl0ZW0oaXRlbSkge1xyXG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoaXRlbSk7XHJcbiAgfTtcclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9wb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7IFxyXG4gICAgdGhpcy5faGFuZGxlRXNjYXBlQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NhcGVDbG9zZS5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5fc3VibWl0QnRuID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLmZvcm1fX3NhdmUtYnRuJyk7XHJcbiAgfVxyXG5cclxuICBvcGVuKCkge1xyXG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZCgncG9wdXBfb3BlbmVkJyk7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjYXBlQ2xvc2UpO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKCdwb3B1cF9vcGVuZWQnKTtcclxuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NhcGVDbG9zZSk7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlRXNjYXBlQ2xvc2UoZXZ0KSB7XHJcbiAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZW5kZXJMb2FkaW5nKGlzTG9hZGluZywgdGV4dCkge1xyXG4gICAgaWYgKGlzTG9hZGluZykge1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdG4udGV4dENvbnRlbnQgPSAn0KHQvtGF0YDQsNC90LXQvdC40LUuLi4nO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnRuLnRleHRDb250ZW50ID0gdGV4dDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGlmIChldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncG9wdXBfb3BlbmVkJykgfHwgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3BvcHVwX19jbG9zZS1idG4nKSkge1xyXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgfTtcclxuICAgIH0pO1xyXG4gIH0gICAgXHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSAnLi9Qb3B1cC5qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHsgcG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCB9KSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTsgICAgXHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcclxuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcuZm9ybScpO1xyXG4gICAgdGhpcy5faW5wdXRzID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCcuZm9ybV9faXRlbScpO1xyXG4gIH1cclxuXHJcbiAgX2dldElucHV0VmFsdWVzKCkgeyAgICBcclxuICAgIHRoaXMuX2lucHV0VmFsdWVzID0ge307XHJcbiAgICB0aGlzLl9pbnB1dHMuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgdGhpcy5faW5wdXRWYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcclxuICAgIH0pXHJcbiAgICByZXR1cm4gdGhpcy5faW5wdXRWYWx1ZXM7XHJcbiAgfVxyXG5cclxuICBzZXRJbnB1dFZhbHVlcyhkYXRhT2JqKSB7XHJcbiAgICB0aGlzLl9pbnB1dHMuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgaW5wdXQudmFsdWUgPSBkYXRhT2JqW2lucHV0Lm5hbWVdO1xyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdGhpcy5yZW5kZXJMb2FkaW5nKHRydWUpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpOyAgICAgIFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XHJcbiAgfVxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTsgXHJcbiAgICB0aGlzLl9wb3B1cEltYWdlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbWFnZScpO1xyXG4gICAgdGhpcy5fcG9wdXBJbWFnZVRpdGxlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbWFnZS10aXRsZScpO1xyXG4gIH1cclxuXHJcbiAgb3BlbiAobmFtZSwgbGluaykge1xyXG4gICAgdGhpcy5fcG9wdXBJbWFnZS5zcmMgPSBsaW5rO1xyXG4gICAgdGhpcy5fcG9wdXBJbWFnZS5hbHQgPSBuYW1lO1xyXG4gICAgdGhpcy5fcG9wdXBJbWFnZVRpdGxlLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHN1cGVyLm9wZW4oKTtcclxuICB9XHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aENvbmZpcm1hdGlvbiBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVTdWJtaXRDYWxsYmFjaykge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9oYW5kbGVTdWJtaXRDYWxsYmFjayA9IGhhbmRsZVN1Ym1pdENhbGxiYWNrO1xyXG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5mb3JtJyk7XHJcbiAgfVxyXG4gIFxyXG4gIHNldFN1Ym1pdEFjdGlvbihhY3Rpb24pIHtcclxuICAgIHRoaXMuX2hhbmRsZVN1Ym1pdENhbGxiYWNrID0gYWN0aW9uO1xyXG4gIH1cclxuICBcclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdGhpcy5faGFuZGxlU3VibWl0Q2FsbGJhY2soKVxyXG4gICAgfSk7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih1c2VyTmFtZVNlbGVjdG9yLCB1c2VyQWJvdXRTZWxlY3RvciwgYXZhdGFyU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX25hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJOYW1lU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fYWJvdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJBYm91dFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2F2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYXZhdGFyU2VsZWN0b3IpOyAgICBcclxuICB9XHJcblxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmFtZTogdGhpcy5fbmFtZS50ZXh0Q29udGVudCxcclxuICAgICAgYWJvdXQ6IHRoaXMuX2Fib3V0LnRleHRDb250ZW50XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8oZGF0YSkge1xyXG4gICAgdGhpcy5fbmFtZS50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcclxuICAgIHRoaXMuX2Fib3V0LnRleHRDb250ZW50ID0gZGF0YS5hYm91dDtcclxuICAgIHRoaXMuX3VzZXJJZCA9IGRhdGEuX2lkO1xyXG4gIH1cclxuXHJcbiAgc2V0QXZhdGFyKGRhdGEpIHtcclxuICAgIHRoaXMuX2F2YXRhci5zcmMgPSBkYXRhLmF2YXRhcjtcclxuICB9XHJcblxyXG4gIGdldFVzZXJJZCgpIHtcclxuICAgIHJldHVybiB0aGlzLl91c2VySWQ7XHJcbiAgfVxyXG59IiwiZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcclxuICBmb3JtU2VsZWN0b3I6ICcuZm9ybScsXHJcbiAgaW5wdXRTZWxlY3RvcjogJy5mb3JtX19pdGVtJyxcclxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogJy5mb3JtX19zYXZlLWJ0bicsXHJcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogJ2Zvcm1fX3NhdmUtYnRuX2Rpc2FibGVkJyxcclxuICBpbnB1dEVycm9yQ2xhc3M6ICdmb3JtX19pdGVtX3R5cGVfZXJyb3InLFxyXG4gIGVycm9yQ2xhc3M6ICdmb3JtX19lcnJvcl9hY3RpdmUnXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgaW5pdGlhbENhcmRzID0gW1xyXG4gIHtcclxuICAgIG5hbWU6ICfQkNGA0YXRi9C3JyxcclxuICAgIGxpbms6ICdodHRwczovL3BpY3R1cmVzLnMzLnlhbmRleC5uZXQvZnJvbnRlbmQtZGV2ZWxvcGVyL2NhcmRzLWNvbXByZXNzZWQvYXJraHl6LmpwZydcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6ICfQp9C10LvRj9Cx0LjQvdGB0LrQsNGPINC+0LHQu9Cw0YHRgtGMJyxcclxuICAgIGxpbms6ICdodHRwczovL3BpY3R1cmVzLnMzLnlhbmRleC5uZXQvZnJvbnRlbmQtZGV2ZWxvcGVyL2NhcmRzLWNvbXByZXNzZWQvY2hlbHlhYmluc2stb2JsYXN0LmpwZydcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6ICfQmNCy0LDQvdC+0LLQvicsXHJcbiAgICBsaW5rOiAnaHR0cHM6Ly9waWN0dXJlcy5zMy55YW5kZXgubmV0L2Zyb250ZW5kLWRldmVsb3Blci9jYXJkcy1jb21wcmVzc2VkL2l2YW5vdm8uanBnJ1xyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogJ9Ca0LDQvNGH0LDRgtC60LAnLFxyXG4gICAgbGluazogJ2h0dHBzOi8vcGljdHVyZXMuczMueWFuZGV4Lm5ldC9mcm9udGVuZC1kZXZlbG9wZXIvY2FyZHMtY29tcHJlc3NlZC9rYW1jaGF0a2EuanBnJ1xyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogJ9Cl0L7Qu9C80L7Qs9C+0YDRgdC60LjQuSDRgNCw0LnQvtC9JyxcclxuICAgIGxpbms6ICdodHRwczovL3BpY3R1cmVzLnMzLnlhbmRleC5uZXQvZnJvbnRlbmQtZGV2ZWxvcGVyL2NhcmRzLWNvbXByZXNzZWQva2hvbG1vZ29yc2t5LXJheW9uLmpwZydcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6ICfQkdCw0LnQutCw0LsnLFxyXG4gICAgbGluazogJ2h0dHBzOi8vcGljdHVyZXMuczMueWFuZGV4Lm5ldC9mcm9udGVuZC1kZXZlbG9wZXIvY2FyZHMtY29tcHJlc3NlZC9iYWlrYWwuanBnJ1xyXG4gIH1cclxuXTtcclxuXHJcbmV4cG9ydCBjb25zdCBwb3B1cFByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfdHlwZV9wcm9maWxlJyk7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19uYW1lJyk7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlQWJvdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWJvdXQnKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVBdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYXZhdGFyJyk7XHJcbmV4cG9ydCBjb25zdCBmb3JtUHJvZmlsZUVkaXQgPSBwb3B1cFByb2ZpbGUucXVlcnlTZWxlY3RvcignLmZvcm1fdHlwZV9wcm9maWxlJyk7XHJcbmV4cG9ydCBjb25zdCBuYW1lSW5wdXQgPSBmb3JtUHJvZmlsZUVkaXQucXVlcnlTZWxlY3RvcignLmZvcm1fX2l0ZW1fdXNlcl9uYW1lJyk7XHJcbmV4cG9ydCBjb25zdCBhYm91dElucHV0ID0gZm9ybVByb2ZpbGVFZGl0LnF1ZXJ5U2VsZWN0b3IoJy5mb3JtX19pdGVtX3VzZXJfYWJvdXQnKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVFZGl0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2VkaXQtYnRuJyk7XHJcbmV4cG9ydCBjb25zdCBmb3JtQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvcm1fdHlwZV9hdmF0YXInKTtcclxuZXhwb3J0IGNvbnN0IGF2YXRhckVkaXRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fZWRpdC1hdmF0YXItYnRuJyk7XHJcblxyXG5leHBvcnQgY29uc3QgcG9wdXBBZGRDYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX3R5cGVfbmV3LWNhcmQnKTtcclxuZXhwb3J0IGNvbnN0IG5ld0NhcmRBZGRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWRkLWJ0bicpO1xyXG5leHBvcnQgY29uc3QgZm9ybU5ld0NhcmQgPSBwb3B1cEFkZENhcmQucXVlcnlTZWxlY3RvcignLmZvcm1fdHlwZV9jYXJkJyk7XHJcblxyXG5leHBvcnQgY29uc3QgY2FyZE5hbWVJbnB1dCA9IGZvcm1OZXdDYXJkLnF1ZXJ5U2VsZWN0b3IoJy5mb3JtX19pdGVtX2NhcmRfbmFtZScpO1xyXG5leHBvcnQgY29uc3QgY2FyZFBpY3R1cmVJbnB1dCA9IGZvcm1OZXdDYXJkLnF1ZXJ5U2VsZWN0b3IoJy5mb3JtX19pdGVtX2NhcmRfYWJvdXQnKTtcclxuZXhwb3J0IGNvbnN0IGNhcmRUZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50LXRlbXBsYXRlJyk7XHJcblxyXG5leHBvcnQgY29uc3QgcG9wdXBJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF90eXBlX2JpZy1waWN0dXJlJyk7XHJcbmV4cG9ydCBjb25zdCBwb3B1cEltYWdlVGl0bGUgPSBwb3B1cEltYWdlLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW1hZ2UtdGl0bGUnKTtcclxuZXhwb3J0IGNvbnN0IHBvcHVwSW1hZ2VQaWN0dXJlID0gcG9wdXBJbWFnZS5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ltYWdlJyk7XHJcblxyXG5leHBvcnQgY29uc3QgcG9wdXBEZWxldGVDYXJkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX3R5cGVfY2FyZC1kZWxldGUnKTtcclxuXHJcbmV4cG9ydCBjb25zdCBjb250YWluZXJTZWxlY3RvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50cycpO1xyXG5cclxuZXhwb3J0IGNvbnN0IHBvcHVwU2VsZWN0b3IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXAnKTsiLCJleHBvcnQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3IoY29uZmlnLCBmb3JtRWxlbWVudCkge1xyXG4gICAgdGhpcy5fY29uZmlnID0gY29uZmlnLFxyXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtRWxlbWVudCxcclxuICAgIHRoaXMuX2Zvcm1TZWxlY3RvciA9IGNvbmZpZy5mb3JtU2VsZWN0b3IsXHJcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gY29uZmlnLmlucHV0U2VsZWN0b3IsXHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IGNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3RvcixcclxuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IGNvbmZpZy5pbnB1dEVycm9yQ2xhc3M7XHJcblx0XHR0aGlzLl9lcnJvckNsYXNzID0gY29uZmlnLmVycm9yQ2xhc3M7XHJcbiAgICBcclxuICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20odGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKSk7XHJcbiAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7ICAgIFxyXG4gIH1cclxuXHJcbiAgX2Rpc2FibGVTdWJtaXRCdXR0b24oKSB7XHJcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCB0cnVlKTtcclxuICB9XHJcblxyXG4gIF9lbmFibGVTdWJtaXRCdXR0b24oKSB7XHJcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSgnZGlzYWJsZWQnKTtcclxuICB9XHJcblxyXG4gIF90b2dnbGVTdWJtaXRCdG5TdGF0ZSgpIHtcclxuICAgIGlmKHRoaXMuX2hhc0ludmFsaWRJbnB1dCgpKSB7XHJcbiAgICAgIHRoaXMuX2Rpc2FibGVTdWJtaXRCdXR0b24oKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2VuYWJsZVN1Ym1pdEJ1dHRvbigpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX2hhc0ludmFsaWRJbnB1dCgpIHtcclxuICAgIHJldHVybiB0aGlzLl9pbnB1dExpc3Quc29tZSgoaW5wdXRTZWxlY3RvcikgPT4ge1xyXG4gICAgICByZXR1cm4gIWlucHV0U2VsZWN0b3IudmFsaWRpdHkudmFsaWQ7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBpZiAoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTsgICAgXHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlO1xyXG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gJyc7XHJcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9O1xyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl90b2dnbGVTdWJtaXRCdG5TdGF0ZSgpO1xyXG5cclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xyXG4gICAgICAgIHRoaXMuX3RvZ2dsZVN1Ym1pdEJ0blN0YXRlKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfTtcclxuICBcclxuICByZXNldFZhbGlkYXRpb24oKSB7XHJcbiAgICB0aGlzLl9kaXNhYmxlU3VibWl0QnV0dG9uKCk7XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICB9KTsgICAgIFxyXG4gIH07XHJcbiAgXHJcbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCAnLi9pbmRleC5jc3MnO1xyXG5pbXBvcnQgQXBpIGZyb20gJy4uL2NvbXBvbmVudHMvQXBpLmpzJztcclxuaW1wb3J0IENhcmQgZnJvbSBcIi4uL2NvbXBvbmVudHMvQ2FyZC5qc1wiO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tICcuLi9jb21wb25lbnRzL1NlY3Rpb24uanMnO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IHsgY29uZmlnLCAgXHJcbiAgcHJvZmlsZUVkaXRCdG4sXHJcbiAgbmV3Q2FyZEFkZEJ0bixcclxuICBmb3JtTmV3Q2FyZCxcclxuICBmb3JtUHJvZmlsZUVkaXQsXHJcbiAgZm9ybUF2YXRhcixcclxuICBhdmF0YXJFZGl0QnRuXHJcbn0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5cclxuaW1wb3J0IHsgRm9ybVZhbGlkYXRvciB9IGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuXHJcbmNvbnN0IHByb2ZpbGVGb3JtVmFsaWRhdGlvbiA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgZm9ybVByb2ZpbGVFZGl0KTtcclxuY29uc3QgbmV3Q2FyZEZvcm1WYWxpZGF0aW9uID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnLCBmb3JtTmV3Q2FyZCk7XHJcbmNvbnN0IGF2YXRhckZvcm1WYWxpZGF0aW9uID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnLCBmb3JtQXZhdGFyKTtcclxuY29uc3QgcG9wdXBXaXRoSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoJy5wb3B1cF90eXBlX2JpZy1waWN0dXJlJyk7XHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKCcucHJvZmlsZV9fbmFtZScsICcucHJvZmlsZV9fYWJvdXQnLCAnLnByb2ZpbGVfX2F2YXRhcicpO1xyXG5jb25zdCBwb3B1cENhcmREZWxldGVDb25maXJtID0gbmV3IFBvcHVwV2l0aENvbmZpcm1hdGlvbignLnBvcHVwX3R5cGVfY2FyZC1kZWxldGUnKTtcclxuXHJcbmxldCB1c2VySWQgPSBudWxsO1xyXG5cclxuY29uc3QgYXBpID0gbmV3IEFwaSh7XHJcbiAgYmFzZVVybDogJ2h0dHBzOi8vbWVzdG8ubm9tb3JlcGFydGllcy5jby92MS9jb2hvcnQtNjMnLFxyXG4gIGhlYWRlcnM6IHtcclxuICAgICdDb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICBBdXRob3JpemF0aW9uOiAnMGZhMjA5NDQtMjM3NC00ZjlkLThhMTAtNDYzODkyMjk2NDdjJ1xyXG4gIH1cclxufSk7XHJcblxyXG5Qcm9taXNlLmFsbChbYXBpLmdldFVzZXJJbmZvKCksIGFwaS5nZXRJbml0aWFsQ2FyZHMoKV0pXHJcbiAgLnRoZW4oKFt1c2VyRGF0YSwgY2FyZHNEYXRhXSkgPT4geyAgICBcclxuICAgIHVzZXJJZCA9IHVzZXJEYXRhLl9pZDtcclxuICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHVzZXJEYXRhKTtcclxuICAgIC8vY2FyZHNEYXRhLmZvckVhY2goKGNhcmQpID0+IHtcclxuICAgIGNhcmRMaXN0LnJlbmRlckl0ZW1zKGNhcmRzRGF0YSk7ICAgIFxyXG4gICAgdXNlckluZm8uc2V0QXZhdGFyKHVzZXJEYXRhKTtcclxuICB9KVxyXG4gIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSk7XHJcblxyXG5jb25zdCBjcmVhdGVDYXJkID0gKGl0ZW0pID0+IHtcclxuICBjb25zdCBjYXJkID0gbmV3IENhcmQoe1xyXG4gICAgZGF0YTogaXRlbSxcclxuICAgIHVzZXJJZDogdXNlckluZm8uZ2V0VXNlcklkKCksXHJcbiAgICBoYW5kbGVDYXJkQ2xpY2s6IChuYW1lLCBsaW5rKSA9PiB7XHJcbiAgICAgIHBvcHVwV2l0aEltYWdlLm9wZW4obmFtZSwgbGluayk7XHJcbiAgICB9LFxyXG4gICAgaGFuZGxlRGVsZXRlQ2FyZDogKGNhcmQpID0+IHtcclxuICAgICAgcG9wdXBDYXJkRGVsZXRlQ29uZmlybS5vcGVuKCk7XHJcbiAgICAgIHBvcHVwQ2FyZERlbGV0ZUNvbmZpcm0uc2V0U3VibWl0QWN0aW9uKCgpID0+IHtcclxuICAgICAgICBhcGkuZGVsZXRlQ2FyZChpdGVtLl9pZClcclxuICAgICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgY2FyZC5kZWxldGVDYXJkKCk7XHJcbiAgICAgICAgICAgIHBvcHVwQ2FyZERlbGV0ZUNvbmZpcm0uY2xvc2UoKTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuY2F0Y2goZXJyID0+IGNvbnNvbGUubG9nKGVycikpO1xyXG4gICAgICB9KVxyXG4gICAgfSxcclxuICAgIGhhbmRsZUxpa2VDbGljazogKCkgPT4ge1xyXG4gICAgICBhcGkuY2hhbmdlTGlrZVN0YXR1cyhpdGVtLl9pZCwgIWNhcmQuZ2V0TGlrZVN0YXR1cygpKVxyXG4gICAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICAgIGNhcmQuaXNMaWtlZCA9IGNhcmQuc2V0TGlrZXMocmVzKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSk7XHJcbiAgICB9XHJcbiAgfSwgICAgXHJcbiAgJy5lbGVtZW50LXRlbXBsYXRlJyk7XHJcbiAgY29uc3QgY2FyZEVsZW1lbnQgPSAgY2FyZC5nZW5lcmF0ZUNhcmQoKTtcclxuICBjYXJkLmNoZWNrTGlrZVN0YXR1cygpO1xyXG4gIHJldHVybiBjYXJkRWxlbWVudDtcclxufVxyXG5cclxuY29uc3QgY2FyZExpc3QgPSBuZXcgU2VjdGlvbih7XHJcbiAgcmVuZGVyZXI6IChpdGVtKSA9PiB7XHJcbiAgICBjYXJkTGlzdC5hcHBlbmRJdGVtKGNyZWF0ZUNhcmQoaXRlbSkpO1xyXG4gIH0sXHJcbn0sICcuZWxlbWVudHMnKTtcclxuXHJcbmNvbnN0IHBvcHVwUHJvZmlsZUVkaXQgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XHJcbiAgcG9wdXBTZWxlY3RvcjogJy5wb3B1cF90eXBlX3Byb2ZpbGUnLFxyXG4gIGhhbmRsZUZvcm1TdWJtaXQ6IChpbnB1dERhdGEpID0+IHtcclxuICAgIGFwaS5lZGl0UHJvZmlsZShpbnB1dERhdGEpXHJcbiAgICAgIC50aGVuKHJlcyA9PiB7XHJcbiAgICAgICAgdXNlckluZm8uc2V0VXNlckluZm8ocmVzKTtcclxuICAgICAgICBwb3B1cFByb2ZpbGVFZGl0LmNsb3NlKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSlcclxuICAgICAgLmZpbmFsbHkoKCkgPT4gcG9wdXBQcm9maWxlRWRpdC5yZW5kZXJMb2FkaW5nKGZhbHNlLCAn0KHQvtGF0YDQsNC90LjRgtGMJykpICAgIFxyXG4gIH1cclxufSk7XHJcblxyXG5jb25zdCBwb3B1cEFkZE5ld0NhcmQgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XHJcbiAgcG9wdXBTZWxlY3RvcjogJy5wb3B1cF90eXBlX25ldy1jYXJkJyxcclxuICBoYW5kbGVGb3JtU3VibWl0OiAoaW5wdXREYXRhKSA9PiB7XHJcbiAgICBhcGkuYWRkTmV3Q2FyZChpbnB1dERhdGEpXHJcbiAgICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgICBjYXJkTGlzdC5hZGRJdGVtKGNyZWF0ZUNhcmQocmVzKSk7ICAgICAgICBcclxuICAgICAgICBwb3B1cEFkZE5ld0NhcmQuY2xvc2UoKTtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmxvZyhlcnIpKVxyXG4gICAgICAuZmluYWxseSgoKSA9PiBwb3B1cEFkZE5ld0NhcmQucmVuZGVyTG9hZGluZyhmYWxzZSwgJ9Ch0L7Qt9C00LDRgtGMJykpXHJcbiAgfVxyXG59KTtcclxuXHJcbmNvbnN0IHBvcHVwQXZhdGFyRWRpdCA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcclxuICBwb3B1cFNlbGVjdG9yOiAnLnBvcHVwX3R5cGVfYXZhdGFyLWVkaXQnLFxyXG4gIGhhbmRsZUZvcm1TdWJtaXQ6IChpbnB1dERhdGEpID0+IHtcclxuICAgIGFwaS5lZGl0QXZhdGFyKGlucHV0RGF0YS5saW5rKVxyXG4gICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgdXNlckluZm8uc2V0QXZhdGFyKHsgYXZhdGFyOiByZXMuYXZhdGFyfSk7XHJcbiAgICAgICAgcG9wdXBBdmF0YXJFZGl0LmNsb3NlKCk7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSlcclxuICAgICAgLmZpbmFsbHkoKCkgPT4gcG9wdXBBdmF0YXJFZGl0LnJlbmRlckxvYWRpbmcoZmFsc2UsICfQodC+0YXRgNCw0L3QuNGC0YwnKSlcclxuICB9XHJcbn0pO1xyXG5cclxuY29uc3Qgb3BlblBvcHVwUHJvZmlsZUVkaXQgPSAoKSA9PiB7XHJcbiAgcHJvZmlsZUZvcm1WYWxpZGF0aW9uLnJlc2V0VmFsaWRhdGlvbigpO1xyXG4gIHBvcHVwUHJvZmlsZUVkaXQub3BlbigpO1xyXG4gIHBvcHVwUHJvZmlsZUVkaXQuc2V0SW5wdXRWYWx1ZXModXNlckluZm8uZ2V0VXNlckluZm8oKSk7XHJcbn1cclxuXHJcbm5ld0NhcmRBZGRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgbmV3Q2FyZEZvcm1WYWxpZGF0aW9uLnJlc2V0VmFsaWRhdGlvbigpO1xyXG4gIHBvcHVwQWRkTmV3Q2FyZC5vcGVuKCk7XHJcbn0pO1xyXG5wcm9maWxlRWRpdEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9wZW5Qb3B1cFByb2ZpbGVFZGl0KTtcclxuXHJcbmF2YXRhckVkaXRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgYXZhdGFyRm9ybVZhbGlkYXRpb24ucmVzZXRWYWxpZGF0aW9uKCk7XHJcbiAgcG9wdXBBdmF0YXJFZGl0Lm9wZW4oKTtcclxufSlcclxuXHJcbnBvcHVwV2l0aEltYWdlLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbnBvcHVwUHJvZmlsZUVkaXQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxucG9wdXBBdmF0YXJFZGl0LnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbnBvcHVwQWRkTmV3Q2FyZC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5wb3B1cENhcmREZWxldGVDb25maXJtLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5wcm9maWxlRm9ybVZhbGlkYXRpb24uZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5uZXdDYXJkRm9ybVZhbGlkYXRpb24uZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5hdmF0YXJGb3JtVmFsaWRhdGlvbi5lbmFibGVWYWxpZGF0aW9uKCk7Il0sIm5hbWVzIjpbIkFwaSIsIl9yZWYiLCJiYXNlVXJsIiwiaGVhZGVycyIsIl9jbGFzc0NhbGxDaGVjayIsInRoaXMiLCJfYmFzZVVybCIsIl9oZWFkZXJzIiwia2V5IiwidmFsdWUiLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0IiwiY29uY2F0Iiwic3RhdHVzIiwiX3RoaXMiLCJmZXRjaCIsInRoZW4iLCJfY2hlY2tSZXNwb25zZSIsIl90aGlzMiIsImRhdGEiLCJfdGhpczMiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm5hbWUiLCJhYm91dCIsImlucHV0RGF0YSIsIl90aGlzNCIsImxpbmsiLCJfaWQiLCJfdGhpczUiLCJfdGhpczYiLCJhdmF0YXIiLCJpc0xpa2VkIiwiX3RoaXM3IiwiQ2FyZCIsInRlbXBsYXRlU2VsZWN0b3IiLCJ1c2VySWQiLCJoYW5kbGVDYXJkQ2xpY2siLCJoYW5kbGVEZWxldGVDYXJkIiwiaGFuZGxlTGlrZUNsaWNrIiwiX2RhdGEiLCJfbGluayIsIl9uYW1lIiwiX3VzZXJJZCIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfaGFuZGxlRGVsZXRlQ2FyZCIsIl9oYW5kbGVMaWtlQ2xpY2siLCJfdGVtcGxhdGVTZWxlY3RvciIsIl9jYXJkRWxlbWVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJfZWxlbWVudCIsIl9nZXRUZW1wbGF0ZSIsIl9jYXJkUGljdHVyZSIsInNyYyIsImFsdCIsInRleHRDb250ZW50IiwiX2xpa2VCdXR0b24iLCJfZGVsZXRlQnV0dG9uIiwiX2xpa2VDb3VudGVyIiwibGlrZXMiLCJsZW5ndGgiLCJfb3duZXJJZCIsIm93bmVyIiwic3R5bGUiLCJkaXNwbGF5IiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJ0b2dnbGUiLCJtYXAiLCJsaWtlIiwic29tZSIsImlkIiwiYWRkIiwicmVtb3ZlIiwiYWRkRXZlbnRMaXN0ZW5lciIsIlNlY3Rpb24iLCJjb250YWluZXJTZWxlY3RvciIsInJlbmRlcmVyIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsIml0ZW1zIiwiZm9yRWFjaCIsIml0ZW0iLCJhcHBlbmQiLCJwcmVwZW5kIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwIiwiX2hhbmRsZUVzY2FwZUNsb3NlIiwiYmluZCIsIl9zdWJtaXRCdG4iLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZXZ0IiwiY2xvc2UiLCJpc0xvYWRpbmciLCJ0ZXh0IiwidGFyZ2V0IiwiUG9wdXBXaXRoRm9ybSIsIl9Qb3B1cCIsIl9pbmhlcml0cyIsIl9zdXBlciIsImhhbmRsZUZvcm1TdWJtaXQiLCJjYWxsIiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfZm9ybSIsIl9pbnB1dHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiX2lucHV0VmFsdWVzIiwiaW5wdXQiLCJkYXRhT2JqIiwiX2dldCIsIl9nZXRQcm90b3R5cGVPZiIsInByb3RvdHlwZSIsInByZXZlbnREZWZhdWx0IiwicmVuZGVyTG9hZGluZyIsIl9nZXRJbnB1dFZhbHVlcyIsInJlc2V0IiwiUG9wdXBXaXRoSW1hZ2UiLCJfcG9wdXBJbWFnZSIsIl9wb3B1cEltYWdlVGl0bGUiLCJQb3B1cFdpdGhDb25maXJtYXRpb24iLCJoYW5kbGVTdWJtaXRDYWxsYmFjayIsIl9oYW5kbGVTdWJtaXRDYWxsYmFjayIsImFjdGlvbiIsIlVzZXJJbmZvIiwidXNlck5hbWVTZWxlY3RvciIsInVzZXJBYm91dFNlbGVjdG9yIiwiYXZhdGFyU2VsZWN0b3IiLCJfYWJvdXQiLCJfYXZhdGFyIiwiY29uZmlnIiwiZm9ybVNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJwb3B1cFByb2ZpbGUiLCJmb3JtUHJvZmlsZUVkaXQiLCJwcm9maWxlRWRpdEJ0biIsImZvcm1BdmF0YXIiLCJhdmF0YXJFZGl0QnRuIiwicG9wdXBBZGRDYXJkIiwibmV3Q2FyZEFkZEJ0biIsImZvcm1OZXdDYXJkIiwicG9wdXBJbWFnZSIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtRWxlbWVudCIsIl9jb25maWciLCJfZm9ybUVsZW1lbnQiLCJfZm9ybVNlbGVjdG9yIiwiX2lucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsIl9pbnB1dExpc3QiLCJBcnJheSIsImZyb20iLCJfYnV0dG9uRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsIl9oYXNJbnZhbGlkSW5wdXQiLCJfZGlzYWJsZVN1Ym1pdEJ1dHRvbiIsIl9lbmFibGVTdWJtaXRCdXR0b24iLCJ2YWxpZGl0eSIsInZhbGlkIiwiaW5wdXRFbGVtZW50IiwiX2hpZGVJbnB1dEVycm9yIiwiX3Nob3dJbnB1dEVycm9yIiwiZXJyb3JFbGVtZW50IiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfdG9nZ2xlU3VibWl0QnRuU3RhdGUiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwicHJvZmlsZUZvcm1WYWxpZGF0aW9uIiwibmV3Q2FyZEZvcm1WYWxpZGF0aW9uIiwiYXZhdGFyRm9ybVZhbGlkYXRpb24iLCJwb3B1cFdpdGhJbWFnZSIsInVzZXJJbmZvIiwicG9wdXBDYXJkRGVsZXRlQ29uZmlybSIsImFwaSIsIkF1dGhvcml6YXRpb24iLCJhbGwiLCJnZXRVc2VySW5mbyIsImdldEluaXRpYWxDYXJkcyIsIl9yZWYyIiwidXNlckRhdGEiLCJjYXJkc0RhdGEiLCJzZXRVc2VySW5mbyIsImNhcmRMaXN0IiwicmVuZGVySXRlbXMiLCJzZXRBdmF0YXIiLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJjcmVhdGVDYXJkIiwiY2FyZCIsImdldFVzZXJJZCIsIm9wZW4iLCJzZXRTdWJtaXRBY3Rpb24iLCJkZWxldGVDYXJkIiwiY2hhbmdlTGlrZVN0YXR1cyIsImdldExpa2VTdGF0dXMiLCJzZXRMaWtlcyIsImNhcmRFbGVtZW50IiwiZ2VuZXJhdGVDYXJkIiwiY2hlY2tMaWtlU3RhdHVzIiwiYXBwZW5kSXRlbSIsInBvcHVwUHJvZmlsZUVkaXQiLCJlZGl0UHJvZmlsZSIsImZpbmFsbHkiLCJwb3B1cEFkZE5ld0NhcmQiLCJhZGROZXdDYXJkIiwiYWRkSXRlbSIsInBvcHVwQXZhdGFyRWRpdCIsImVkaXRBdmF0YXIiLCJyZXNldFZhbGlkYXRpb24iLCJzZXRJbnB1dFZhbHVlcyIsInNldEV2ZW50TGlzdGVuZXJzIiwiZW5hYmxlVmFsaWRhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=